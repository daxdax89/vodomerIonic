{"version":3,"sources":["../../src/pages/ocitavanje/ocitavanje.module.ts","../../src/pages/ocitavanje/ocitavanje.ts","../../node_modules/@ionic-native/firebase/index.js"],"names":[],"mappings":"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","file":"0.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { OcitavanjePage } from './ocitavanje';\n\n@NgModule({\n  declarations: [\n    OcitavanjePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(OcitavanjePage),\n  ],\n  exports: [\n    OcitavanjePage\n  ]\n})\nexport class OcitavanjePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ocitavanje/ocitavanje.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Firebase } from '@ionic-native/firebase';\n\n@IonicPage()\n@Component({\n  selector: 'page-ocitavanje',\n  templateUrl: 'ocitavanje.html',\n})\nexport class OcitavanjePage {\n\n  constructor(private navCtrl: NavController, private navParams: NavParams, private firebase: Firebase) {\n    \n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad OcitavanjePage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ocitavanje/ocitavanje.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @beta\n * @name Firebase\n * @description\n * This plugin brings push notifications, analytics, event tracking, crash reporting and more from Google Firebase to your Cordova project! Android and iOS supported (including iOS 10).\n *\n * @usage\n * ```typescript\n * import { Firebase } from '@ionic-native/firebase';\n *\n * constructor(private firebase: Firebase) { }\n *\n * ...\n *\n * this.firebase.getToken()\n *   .then(token => console.log(`The token is ${token}`)) // save the token server-side and use it to push notifications to this device\n *   .catch(error => console.error('Error getting token', error));\n *\n * this.firebase.onTokenRefresh()\n *   .subscribe((token: string) => console.log(`Got a new token ${token}`));\n *\n * ```\n */\nvar Firebase = (function (_super) {\n    __extends(Firebase, _super);\n    function Firebase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get the device token\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.getToken = function () { return; };\n    /**\n     * Get notified when a token is refreshed\n     * @return {Observable<any>}\n     */\n    Firebase.prototype.onTokenRefresh = function () { return; };\n    /**\n     * Get notified when the user opens a notification\n     * @return {Observable<any>}\n     */\n    Firebase.prototype.onNotificationOpen = function () { return; };\n    /**\n     * Grant permission to receive push notifications\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.grantPermission = function () { return; };\n    /**\n   * Check permission to receive push notifications\n   * @return {Promise<any>}\n   */\n    Firebase.prototype.hasPermission = function () { return; };\n    /**\n     * Set icon badge number. Set to 0 to clear the badge.\n     * @param badgeNumber {number}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.setBadgeNumber = function (badgeNumber) { return; };\n    /**\n     * Get icon badge number\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.getBadgeNumber = function () { return; };\n    /**\n     * Subscribe to a topic\n     * @param topic {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.subscribe = function (topic) { return; };\n    /**\n     * Unsubscribe from a topic\n     * @param topic {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.unsubscribe = function (topic) { return; };\n    /**\n     * Log an event using Analytics\n     * @param type {string}\n     * @param data {Object}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.logEvent = function (type, data) { return; };\n    /**\n     * Log an Error using FirebaseCrash\n     * @param message {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.logError = function (message) { return; };\n    /**\n     * Set the name of the current screen in Analytics\n     * @param name {string} Screen name\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.setScreenName = function (name) { return; };\n    /**\n     * Set a user id for use in Analytics\n     * @param userId {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.setUserId = function (userId) { return; };\n    /**\n     * Set a user property for use in Analytics\n     * @param name {string}\n     * @param value {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.setUserProperty = function (name, value) { return; };\n    /**\n     * Fetch Remote Config parameter values for your app\n     * @param cacheExpirationSeconds\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.fetch = function (cacheExpirationSeconds) { return; };\n    /**\n     * Activate the Remote Config fetched config\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.activateFetched = function () { return; };\n    /**\n     * Retrieve a Remote Config value\n     * @param key {string}\n     * @param namespace {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.getValue = function (key, namespace) { return; };\n    /**\n     * Retrieve a Remote Config byte array\n     * @param key {string}\n     * @param namespace {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.getByteArray = function (key, namespace) { return; };\n    /**\n     * Get the current state of the FirebaseRemoteConfig singleton object\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.getInfo = function () { return; };\n    /**\n     * Change the settings for the FirebaseRemoteConfig object's operations\n     * @param settings {Object}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.setConfigSettings = function (settings) { return; };\n    /**\n     * Set defaults in the Remote Config\n     * @param defaults {Object}\n     * @param namespace {string}\n     * @return {Promise<any>}\n     */\n    Firebase.prototype.setDefaults = function (defaults, namespace) { return; };\n    return Firebase;\n}(IonicNativePlugin));\nFirebase.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nFirebase.ctorParameters = function () { return []; };\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"getToken\", null);\n__decorate([\n    Cordova({\n        observable: true\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Observable)\n], Firebase.prototype, \"onTokenRefresh\", null);\n__decorate([\n    Cordova({\n        observable: true\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Observable)\n], Firebase.prototype, \"onNotificationOpen\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"grantPermission\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"hasPermission\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Number]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"setBadgeNumber\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"getBadgeNumber\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"subscribe\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"unsubscribe\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"logEvent\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"logError\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"setScreenName\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"setUserId\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"setUserProperty\", null);\n__decorate([\n    Cordova({\n        successIndex: 1,\n        errorIndex: 2\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Number]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"fetch\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"activateFetched\", null);\n__decorate([\n    Cordova({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"getValue\", null);\n__decorate([\n    Cordova({\n        platforms: ['Android'],\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"getByteArray\", null);\n__decorate([\n    Cordova({\n        platforms: ['Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"getInfo\", null);\n__decorate([\n    Cordova({\n        platforms: ['Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"setConfigSettings\", null);\n__decorate([\n    Cordova({\n        platforms: ['Android'],\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object, String]),\n    __metadata(\"design:returntype\", Promise)\n], Firebase.prototype, \"setDefaults\", null);\nFirebase = __decorate([\n    Plugin({\n        pluginName: 'Firebase',\n        plugin: 'cordova-plugin-firebase',\n        pluginRef: 'FirebasePlugin',\n        repo: 'https://github.com/arnesson/cordova-plugin-firebase',\n        platforms: ['Android', 'iOS']\n    })\n], Firebase);\nexport { Firebase };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/firebase/index.js\n// module id = 272\n// module chunks = 0"],"sourceRoot":""}